{"1": "A. A. Ageev and M. I. Sviridenko. An 0.828 approximation algorithm for the uncapacitated facility  location problem. Discrete Applied Mathematics, 93:149156, 1999.  7. As presented, our algorithm needs to know the time horizon T . This dependence can be removed with a standard  trick: simply guess T = 1, and double T while restarting the algorithm everytime the current guess is violated.  11   AN OPTIMAL ALGORITHM FOR ONLINE USM  Even without this proof, we might have expected that a claim like Corollary 2 should be true. After all, over time, a good algorithm for the two experts problem learns to pick the better (on average) expert. This corresponds to making an of\ufb02ine greedy decision, which according to the Buchbinder et al. (2015b) analysis is good enough to get a 1/3-approximation. However, there are some subtleties that can occur. For example, the subroutine can sometimes make mistakes, possibly picking a negative value over a positive one sometimes. The original Buchbinder et al. (2015b) analysis did not need to account for the possibility of such events, but our proofs implicitly handle them.  3. An Optimal No- 1  2-Regret Algorithm for Online USM  We have now identified a clear goal. In this section, we successfully give a no-regret algorithm for the USM Balance Subproblem. Note that this is the optimal value of \u03b1 in terms of \u03b1-regret, since Theorem 1 also transforms inapproximability of Online USM (nothing better than 1/2) into inapproximability of the USM Balance Subproblem (nothing better than 1). Due to our unusual definition of \u03b1-regret for the USM Balance Subproblem, this was nonobvious. It is perhaps suprising that such a simple algorithm manages to obtain the optimal approximation ratio; the brunt of the work is in the analysis.  Algorithm 2: USM BALANCER \u221a  Initialize x \u2190 1 2 for round t = 1 to T do  T .  .  Compute probability pt \u2190 x\u221a T Choose the item with probability pt for round t, and receive the point (\u03b1t, \u03b2t), Write (\u03b1t, \u03b2t) as the convex combination cu(+1, +1) + cr(+1, \u22121) + c(cid:96)(\u22121, +1). Perform update x \u2190 x + (1 \u2212 2pt)cu + cr \u2212 c(cid:96). Cap x back into the interval [0,  T ].  \u221a  end  Our proposed subroutine is Algorithm 2.7 We defer the proof of its regret to"}